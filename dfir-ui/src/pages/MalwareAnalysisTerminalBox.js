import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useRef, useState } from "react";
const MalwareAnalysisTerminalBox = ({ caseNumber, open, onClose, }) => {
    const [logs, setLogs] = useState(["[+] Waiting for malware analysis logs..."]);
    const [disconnected, setDisconnected] = useState(false);
    const logEndRef = useRef(null);
    const wsRef = useRef(null);
    const connectWebSocket = () => {
        const wsUrl = `ws://ec2-54-196-221-208.compute-1.amazonaws.com:8000/api/ws/investigations/nkase/logs?case_number=${caseNumber}`;
        console.log("[WebSocket] Connecting to:", wsUrl);
        const ws = new WebSocket(wsUrl);
        wsRef.current = ws;
        ws.onopen = () => {
            console.log("[WebSocket] Connected");
            setLogs(["[+] Connected. Waiting for logs..."]);
            setDisconnected(false);
        };
        ws.onmessage = (event) => {
            console.log("[WebSocket] Message:", event.data);
            setLogs((prev) => [...prev, event.data]);
        };
        ws.onerror = (error) => {
            console.error("[WebSocket] Error:", error);
            setLogs((prev) => [...prev, "[!] WebSocket error occurred."]);
            ws.close();
        };
        ws.onclose = () => {
            console.log("[WebSocket] Connection closed");
            setLogs((prev) => [...prev, "[WebSocket] Connection closed"]);
            setDisconnected(true);
        };
    };
    useEffect(() => {
        if (!open || !caseNumber)
            return;
        connectWebSocket();
        return () => {
            console.log("[WebSocket] Cleanup: closing connection");
            wsRef.current?.close();
        };
    }, [open, caseNumber]);
    useEffect(() => {
        logEndRef.current?.scrollIntoView({ behavior: "smooth" });
    }, [logs]);
    if (!open)
        return null;
    return (_jsx("div", { className: "fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60", children: _jsxs("div", { className: "bg-[#181c20] rounded-2xl shadow-2xl w-full max-w-3xl relative border border-[#23272e] flex flex-col", style: { minHeight: 400 }, children: [_jsx("div", { className: "flex items-center justify-between px-6 py-4 border-b border-[#23272e] bg-[#23272e] rounded-t-2xl", children: _jsxs("span", { className: "text-lg font-bold text-white", children: ["Malware Analysis: ", _jsx("span", { className: "text-cyan-400", children: caseNumber })] }) }), _jsx("div", { className: "px-6 pt-3 pb-1 text-gray-300 text-sm border-b border-[#23272e] bg-[#23272e]", children: "Perform malware analysis on the forensics copy of the resource to identify malicious files and code" }), _jsxs("div", { className: "flex flex-row flex-1 min-h-[320px] max-h-[480px]", children: [_jsxs("div", { className: "flex flex-col justify-between bg-[#181c20] p-6 w-1/3 min-w-[200px] border-r border-[#23272e]", children: [_jsxs("div", { children: [_jsx("div", { className: "text-base font-semibold text-white mb-2", children: "Running forensics analysis" }), _jsx("div", { className: "text-sm text-gray-400", children: "using SIFT workstation" })] }), _jsxs("div", { className: "flex flex-col gap-2 mt-8", children: [_jsx("button", { onClick: () => {
                                                wsRef.current?.close();
                                                onClose();
                                            }, className: "bg-red-600 hover:bg-red-700 text-white font-semibold px-4 py-2 rounded-lg transition text-base w-full", children: "Close" }), disconnected && (_jsx("button", { onClick: () => {
                                                setLogs(["[+] Reconnecting..."]);
                                                connectWebSocket();
                                            }, className: "bg-blue-600 hover:bg-blue-700 text-white font-semibold px-4 py-2 rounded-lg transition text-base w-full", children: "Reconnect" }))] })] }), _jsx("div", { className: "flex-1 bg-[#101215] rounded-br-2xl flex items-stretch overflow-y-auto p-6", children: _jsxs("pre", { className: "text-green-400 text-xs font-mono whitespace-pre-wrap w-full", children: [logs.join("\n"), _jsx("div", { ref: logEndRef })] }) })] })] }) }));
};
export default MalwareAnalysisTerminalBox;
