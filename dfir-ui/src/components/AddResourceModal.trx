import React from "react";
import { Dialog } from "@headlessui/react";

interface AddResourceModalProps {
  isOpen: boolean;
  onClose: () => void;
  resourceData: ResourcesResponse | null;
}

interface EC2Instance {
  InstanceId: string;
  InstanceType: string;
  State: string;
  PrivateIpAddress: string;
  AvailabilityZone: string;
  Tags?: { Key: string; Value: string }[];
  is_quarantined: boolean;
}

interface S3Bucket {
  Name: string;
  Region: string;
  CreationDate: string;
}

interface ResourcesResponse {
  EC2: EC2Instance[];
  S3: S3Bucket[];
  DynamoDB: any[];
}

const AddResourceModal: React.FC<AddResourceModalProps> = ({ isOpen, onClose, resourceData }) => {
  return (
    <Dialog open={isOpen} onClose={onClose} className="fixed z-50 inset-0 overflow-y-auto">
      <div className="flex items-center justify-center min-h-screen px-4">
        <div className="fixed inset-0 bg-black opacity-30" />
        <div className="bg-white text-black rounded-lg p-6 max-w-3xl w-full relative z-10">
          <Dialog.Title className="text-lg font-bold mb-2">Add Resource to Investigation</Dialog.Title>
          <p className="text-sm text-gray-700 mb-4">
            Add a cloud resource to this investigation for analysis and forensic examination.
          </p>

          <div className="mb-4">
            <label className="block text-xs font-medium text-gray-700 mb-1">Cloud Provider</label>
            <select className="w-full border p-2 rounded bg-gray-50">
              <option>Amazon Web Services</option>
            </select>
          </div>

          <div className="mb-4">
            <label className="block text-xs font-medium text-gray-700 mb-1">Resource Type</label>
            <select className="w-full border p-2 rounded bg-gray-50">
              <option>EC2 Instance / Virtual Machine</option>
              <option>Storage (S3, Blob Storage)</option>
              <option>DynamoDB</option>
              <option>&gt;Network Resource&lt;</option>
            </select>
          </div>

          {resourceData?.EC2?.length ? (
            <div className="mb-4">
              <h3 className="font-semibold text-sm mb-2">EC2 Instances</h3>
              <ul className="space-y-2">
                {resourceData.EC2.map((res) => (
                  <li key={res.InstanceId} className="border p-3 rounded">
                    <p className="font-medium">
                      {res.Tags?.find((tag) => tag.Key === "Name")?.Value || res.InstanceId}
                    </p>
                    <p className="text-xs text-gray-500">
                      {res.InstanceType} | {res.State} | {res.PrivateIpAddress} | AZ: {res.AvailabilityZone}
                    </p>
                  </li>
                ))}
              </ul>
            </div>
          ) : (
            <p className="text-gray-500 text-sm">No EC2 resources found.</p>
          )}

          <div className="mt-6 text-right">
            <button onClick={onClose} className="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400">
              Close
            </button>
          </div>
        </div>
      </div>
    </Dialog>
  );
};

export default AddResourceModal;

